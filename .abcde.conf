#  vim: set ts=2 sts=2 sw=2 expandtab smarttab ft=sh:
# -----------------$HOME/.abcde.conf----------------- #
#
# A sample configuration file to convert music cds to
#      MP3, Ogg Vorbis, FLAC, Musepack & AAC
#          using abcde version 2.5.3
#
#       http://andrews-corner.org/abcde.html
# -------------------------------------------------- #

OGGENCODERSYNTAX=oggenc                # Specify encoder for Ogg Vorbis
MP3ENCODERSYNTAX=lame                  # Specify encoder for MP3
FLACENCODERSYNTAX=flac                 # Specify encoder for FLAC
#MPPENCODERSYNTAX=mppenc                # Specify encoder for Musepack
#AACENCODERSYNTAX=faac                  # Specify encoder for AAC

OGGENC=oggenc                          # Path to Ogg Vorbis encoder
LAME=lame                              # Path to MP3 encoder
FLAC=flac                              # Path to FLAC encoder
#MPPENC=mppenc                          # Path to Musepack encoder
#AACENC=faac                            # Path to AAC encoder

OGGENCOPTS='-q 3'                      # Options for Ogg Vorbis
LAMEOPTS='--preset extreme'            # Options for MP3
FLACOPTS='--verify --best'             # Options for FLAC
#MPPENCOPTS='--extreme'                 # Options for Musepack
#AACENCOPTS='-q 250 -w -s'              # Options for AAC

# specify -o on the command line
## #OUTPUTTYPE="ogg,mp3,flac,mpc,m4a"      # Encode to all 5 formats!

# The cd ripping program to use. There are a few choices here: cdda2wav,
# dagrab, cddafs (Mac OS X only) and flac.
CDROMREADERSYNTAX=cdparanoia

# Give the location of the ripping program and pass any extra options:
CDPARANOIA=cdparanoia
CDPARANOIAOPTS="--never-skip=40"

# normlize-audio
NORMALIZERSYNTAX=normalize

# Give the location of the CD identification program:
CDDISCID=cd-discid

# Give the base location here for the encoded music files.
OUTPUTDIR="$HOME/data/music/"

# The default actions that abcde will take.
ACTIONS=cddb,read,normalize,encode,tag,move,clean

# Decide here how you want the tracks labelled for a standard 'single-artist',
# multi-track encode and also for a multi-track, 'various-artist' encode:
OUTPUTFORMAT='${ARTISTFILE}/${ALBUMFILE}/${TRACKNUM}-${TRACKFILE}'
VAOUTPUTFORMAT='various/${ALBUMFILE}/${TRACKNUM}-${ARTISTFILE}-${TRACKFILE}'

# Decide here how you want the tracks labelled for a standard 'single-artist',
# single-track encode and also for a single-track 'various-artist' encode.
# (Create a single-track encode with 'abcde -1' from the commandline.)
ONETRACKOUTPUTFORMAT='${OUTPUT}/${ARTISTFILE}/${ALBUMFILE}'
VAONETRACKOUTPUTFORMAT='${OUTPUT}/various/${ALBUMFILE}'

# Create playlists for single and various-artist encodes. I would suggest
# commenting these out for single-track encoding.
#PLAYLISTFORMAT='${OUTPUT}/${ARTISTFILE}/${ALBUMFILE}/${ALBUMFILE}.m3u'
#VAPLAYLISTFORMAT='${OUTPUT}/various/${ALBUMFILE}/${ALBUMFILE}.m3u'

mungefilename ()
{
  #echo "$@" | sed s,:,-,g | tr / _ | tr -d \'\"\?\[:cntrl:\]
  echo "$*" | perl -I$HOME/bin -ne 'require "clean_filenames"; print clean_filenames::clean($_)'
}

# could define post_read() to run clean_filenames --song

# extra options
BATCHNORM=y
MAXPROCS=2                              # Run a few encoders simultaneously
PADTRACKS=y                             # Makes tracks 01 02 not 1 2
EXTRAVERBOSE=y                          # Useful for debugging
EJECTCD=y                               # Please eject cd when finished :-)
CDDBPROTO=6                             # retrieve CDDB entries in UTF-8 format
