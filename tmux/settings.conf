# vim:set ft=tmux:

# This is necessary for Mac OSX for some reason.
set-option -g default-command "if which reattach-to-user-namespace > /dev/null; then reattach-to-user-namespace -l $SHELL; else $SHELL; fi"

#set -g default-terminal screen-256color
#if-shell 'sleep 9; test -e /usr/share/terminfo/s/screen-256color' 'set -g default-terminal screen-256color'
#if-shell 'sleep 9; test -e /usr/share/terminfo/s/screen-256color' 'set    default-terminal screen-256color'
#run-shell 'sleep 9; test -e /usr/share/terminfo/s/screen-256color && tmux set -g default-terminal screen-256color'

# keys #

# prefix
# the opposite of Esc ^[ and can be done with one hand
set -g prefix ^]

# old prefix
bind-key -n ^_ display-message "STOP IT!"

# unbind old literal
unbind-key C-b

# unbind default keys that I don't like
unbind-key '"'
unbind-key '%'
unbind-key '='

# n+modifier for previous (similar to vim, but ctrl is more natural in this case)
#bind-key ^N previous-window

# literal
  # i like "]" as paste; "^]" is rare; cannot get any other modifiers to work with ] so use \ which is close by
bind-key ^\ send-prefix

# double the prefix to bounce back and forth
bind-key ^] last-window

bind-key ^R refresh-client

# i don't need clock-mode to be bound to a single key stroke (t).
# choose-tree is a cool view, but usually when i switch sessions
# i just want to move up or down one and go to the window i was on
bind-key t choose-tree -u
bind-key s choose-session

bind-key H run-shell "man tmux" # help
bind-key Y run-shell "perl -e '\$_=qx/cal -y/; s/^/  /mg; s/ _\\010(.)_\\010(.) ?/<$1$2>/g; print' 2>&1" # calendar

# redisplay messages in case you forgot or couldn't read it
bind-key m show-messages

# condsider binding ^n ^p ^[ ^] j k

# why list-buffers without choosing one?
bind-key '#' choose-buffer

# Ctrl-C copy, Ctrl-V paste (X11 clipboard)
clipboard='env DISPLAY="${DISPLAY:-:0.0}" ~/bin/clip'
bind-key ^C new-window -d "tmux save-buffer - | $clipboard; tmux display-message 'buffer copied to clipboard'"
bind-key ^V new-window -d "$clipboard | tmux load-buffer - \\; paste-buffer -p \\; display-message 'buffer loaded from clipboard'"

# Use bracketed-paste mode.
bind-key '#' choose-buffer "paste-buffer -p -b '%%'"
bind-key ] paste-buffer -p

# pane management keys #

#active_pane_pwd='' # 1.8
active_pane_pwd='#{pane_current_path}' # 1.9+

# Default "new-window" to start in the same pwd as the active pane.
bind-key c new-window -c "$active_pane_pwd"

#bind-key '"' choose-window
#bind-key '+' command-prompt -p index 'select-window "1%%"'
bind-key | split-window -h -c "$active_pane_pwd"
bind-key - split-window -v -c "$active_pane_pwd"

bind-key ! confirm-before kill-pane
# break-pane does the opposite of what i want (Q) so swap windows afterward
bind-key Q break-pane    \; swap-window -t !
bind-key X break-pane -d

# bring in the most recent window
bind-key j join-pane -s ':!'
# prompt for window number
#bind-key J command-prompt -p index "join-pane -s ':%%'"
# select window from list
bind-key J choose-window "join-pane -s '%%'"

# command run-shell "move-window or swap-window"

# copy mode keys #

# try to recreate the copy-line functionality of screen's "Y"
#bind-key -t vi-copy Y send-keys ^ ' ' $ Enter
#bind-key -t vi-copy S-y back-to-indentation begin-selection end-of-line copy-selection
#bind-key [ new-window -d 'tmux copy-mode \; bind-key -n Y send-keys ^ " " $ Enter \; leave-copy-mode'
# remember to use the prefix
#bind-key Y send-keys '^' Space '$' Enter
bind-key -t vi-copy Y copy-line

# server options #

# turn off Escape key delay
set-option -s escape-time 0

# session options #

set-option -g bell-action any
set-option -g detach-on-destroy off
set-option -g display-panes-time 3000
set-option -g display-time 2000
set-option -g history-limit 3000

#set-option -g lock-after-time 3600
#set-option -g lock-command "" # lck and lock not in ubuntu... vlock?

set-option -g repeat-time 1000
##set-option -g set-titles on
##set-option -g set-titles-string '#H:#S.#I.#P #W #T' # window number,program name,active (or not)
set-option -g status-keys emacs
set-option -g status-utf8 on

set-option -g visual-activity on
set-option -g visual-bell on
set-option -g visual-silence on

# window options #

set-option -g -w aggressive-resize on

# status line #

set -g status-utf8 on
set -g status-interval 1
set -g status-bg colour233 # dark grey
set -g status-fg green
set -g status-left-length 25
set -g status-left '#[fg=yellow]#h #[fg=cyan][#[fg=green,bold]#S#[fg=yellow,nobold]:#I.#P#[fg=cyan]]'
set -g status-right-length 35
set -g status-right '#[fg=yellow]#(uptime | sed -r "s/.+ load average: //; s/,//g")#[fg=cyan]|#[fg=magenta]%m-%d #[fg=green]%H:%M:%S#[fg=cyan]|#[fg=red]#(date -u +%%H)#[fg=green]Z'

setw -g window-status-current-fg   magenta
setw -g window-status-current-attr bold
setw -g window-status-last-fg      colour202

# window options #

setw -g alternate-screen off
setw -g mode-keys vi
setw -g mode-mouse off
setw -g remain-on-exit off
setw -g utf8 on
setw -g wrap-search off
setw -g xterm-keys on

# add something to terminal-overrides for arrow keys?
# set -g terminal-overrides ""*88col*:colors=88,*256col*:colors=256"
#set -g terminal-overrides '*88col*:colors=88,*256col*:colors=256,xterm*:XT:Ms=\E]52;%p1%s;%p2%s\007:Cc=\E]12;%p1%s\007:Cr=\E]112\007:Cs=\E[%p1%d q:Csr=\E[2 q,screen*:XT'
#set -g terminal-overrides '*88col*:colors=88,*256col*:colors=256,xterm*:XT:Ms=\E]52;%p1%s;%p2%s\007:Cc=\E]12;%p1%s\007:Cr=\E]112\007:Cs=\E]50;CursorShape=%?%p1%{3}%<%t%{0}%e%p1%{2}%-%;%d\007'
#set -g terminal-overrides '*88col*:colors=88,*256col*:colors=256,xterm*:XT:Ms=\E]52;%p1%s;%p2%s\007:Cs=\E]12;%p1%s\007:Cr=\E]112\007:Ss=\E]50;CursorShape=%?%p1%{3}%<%t%{0}%e%p1%{2}%-%;%d\007'


# Split Navigation #

# Move specific directions instead of cycling.
#bind-key Tab    select-pane -t :.+1
#bind-key BSpace select-pane -t :.-1
unbind-key Tab
unbind-key BSpace
source-file ~/run_control/tmux/vim-tmux-navigator.conf
